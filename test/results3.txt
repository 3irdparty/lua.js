/*lua.js generated code*/return l._f(function()
{
    var __VA_ARG = Array.prototype.slice.call(arguments, 0);
    var t$1 = l.__newTable();
    for (var i$2, $var$3 = 1, $limit$4 = 10;(i$2=$var$3)<=$limit$4;++$var$3)
    {
        l.__call(l._f(function(i$2)
        {
            var j$6 = l.d0;
            l.__set(t$1, i$2, l._f(function()
            {
                j$6 = l.__add(j$6,1);
                l.__call(l.__get(_ENV,"assert"),[l.__eq(j$6,1)]);
                return [];
            }));
        }),[i$2]);
    }
    for (var i$7, $var$8 = 1, $limit$9 = 10;(i$7=$var$8)<=$limit$9;++$var$8)
    {
        l.__call(l.__get(t$1,i$7),[]);
    }
    return [];
});